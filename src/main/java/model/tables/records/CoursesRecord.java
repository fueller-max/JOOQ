/*
 * This file is generated by jOOQ.
 */
package model.tables.records;


import model.enums.CoursesType;
import model.tables.Courses;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CoursesRecord extends UpdatableRecordImpl<CoursesRecord> implements Record9<UInteger, String, UInteger, CoursesType, String, UInteger, UInteger, UInteger, Double> {

    private static final long serialVersionUID = -1179963886;

    /**
     * Setter for <code>skillbox.courses.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>skillbox.courses.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>skillbox.courses.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>skillbox.courses.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>skillbox.courses.duration</code>.
     */
    public void setDuration(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>skillbox.courses.duration</code>.
     */
    public UInteger getDuration() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>skillbox.courses.type</code>.  :  /  /  / 
     */
    public void setType(CoursesType value) {
        set(3, value);
    }

    /**
     * Getter for <code>skillbox.courses.type</code>.  :  /  /  / 
     */
    public CoursesType getType() {
        return (CoursesType) get(3);
    }

    /**
     * Setter for <code>skillbox.courses.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>skillbox.courses.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>skillbox.courses.teacher_id</code>.   ,   
     */
    public void setTeacherId(UInteger value) {
        set(5, value);
    }

    /**
     * Getter for <code>skillbox.courses.teacher_id</code>.   ,   
     */
    public UInteger getTeacherId() {
        return (UInteger) get(5);
    }

    /**
     * Setter for <code>skillbox.courses.students_count</code>.
     */
    public void setStudentsCount(UInteger value) {
        set(6, value);
    }

    /**
     * Getter for <code>skillbox.courses.students_count</code>.
     */
    public UInteger getStudentsCount() {
        return (UInteger) get(6);
    }

    /**
     * Setter for <code>skillbox.courses.price</code>.
     */
    public void setPrice(UInteger value) {
        set(7, value);
    }

    /**
     * Getter for <code>skillbox.courses.price</code>.
     */
    public UInteger getPrice() {
        return (UInteger) get(7);
    }

    /**
     * Setter for <code>skillbox.courses.price_per_hour</code>.
     */
    public void setPricePerHour(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>skillbox.courses.price_per_hour</code>.
     */
    public Double getPricePerHour() {
        return (Double) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<UInteger, String, UInteger, CoursesType, String, UInteger, UInteger, UInteger, Double> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<UInteger, String, UInteger, CoursesType, String, UInteger, UInteger, UInteger, Double> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Courses.COURSES.ID;
    }

    @Override
    public Field<String> field2() {
        return Courses.COURSES.NAME;
    }

    @Override
    public Field<UInteger> field3() {
        return Courses.COURSES.DURATION;
    }

    @Override
    public Field<CoursesType> field4() {
        return Courses.COURSES.TYPE;
    }

    @Override
    public Field<String> field5() {
        return Courses.COURSES.DESCRIPTION;
    }

    @Override
    public Field<UInteger> field6() {
        return Courses.COURSES.TEACHER_ID;
    }

    @Override
    public Field<UInteger> field7() {
        return Courses.COURSES.STUDENTS_COUNT;
    }

    @Override
    public Field<UInteger> field8() {
        return Courses.COURSES.PRICE;
    }

    @Override
    public Field<Double> field9() {
        return Courses.COURSES.PRICE_PER_HOUR;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public UInteger component3() {
        return getDuration();
    }

    @Override
    public CoursesType component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public UInteger component6() {
        return getTeacherId();
    }

    @Override
    public UInteger component7() {
        return getStudentsCount();
    }

    @Override
    public UInteger component8() {
        return getPrice();
    }

    @Override
    public Double component9() {
        return getPricePerHour();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public UInteger value3() {
        return getDuration();
    }

    @Override
    public CoursesType value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public UInteger value6() {
        return getTeacherId();
    }

    @Override
    public UInteger value7() {
        return getStudentsCount();
    }

    @Override
    public UInteger value8() {
        return getPrice();
    }

    @Override
    public Double value9() {
        return getPricePerHour();
    }

    @Override
    public CoursesRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public CoursesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CoursesRecord value3(UInteger value) {
        setDuration(value);
        return this;
    }

    @Override
    public CoursesRecord value4(CoursesType value) {
        setType(value);
        return this;
    }

    @Override
    public CoursesRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CoursesRecord value6(UInteger value) {
        setTeacherId(value);
        return this;
    }

    @Override
    public CoursesRecord value7(UInteger value) {
        setStudentsCount(value);
        return this;
    }

    @Override
    public CoursesRecord value8(UInteger value) {
        setPrice(value);
        return this;
    }

    @Override
    public CoursesRecord value9(Double value) {
        setPricePerHour(value);
        return this;
    }

    @Override
    public CoursesRecord values(UInteger value1, String value2, UInteger value3, CoursesType value4, String value5, UInteger value6, UInteger value7, UInteger value8, Double value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoursesRecord
     */
    public CoursesRecord() {
        super(Courses.COURSES);
    }

    /**
     * Create a detached, initialised CoursesRecord
     */
    public CoursesRecord(UInteger id, String name, UInteger duration, CoursesType type, String description, UInteger teacherId, UInteger studentsCount, UInteger price, Double pricePerHour) {
        super(Courses.COURSES);

        set(0, id);
        set(1, name);
        set(2, duration);
        set(3, type);
        set(4, description);
        set(5, teacherId);
        set(6, studentsCount);
        set(7, price);
        set(8, pricePerHour);
    }
}
