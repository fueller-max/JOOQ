/*
 * This file is generated by jOOQ.
 */
package model.tables.records;


import java.time.LocalDateTime;

import model.tables.Students;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentsRecord extends UpdatableRecordImpl<StudentsRecord> implements Record4<UInteger, String, UInteger, LocalDateTime> {

    private static final long serialVersionUID = 967765544;

    /**
     * Setter for <code>skillbox.students.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>skillbox.students.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>skillbox.students.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>skillbox.students.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>skillbox.students.age</code>.
     */
    public void setAge(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>skillbox.students.age</code>.
     */
    public UInteger getAge() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>skillbox.students.registration_date</code>.
     */
    public void setRegistrationDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>skillbox.students.registration_date</code>.
     */
    public LocalDateTime getRegistrationDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UInteger, String, UInteger, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UInteger, String, UInteger, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Students.STUDENTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Students.STUDENTS.NAME;
    }

    @Override
    public Field<UInteger> field3() {
        return Students.STUDENTS.AGE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Students.STUDENTS.REGISTRATION_DATE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public UInteger component3() {
        return getAge();
    }

    @Override
    public LocalDateTime component4() {
        return getRegistrationDate();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public UInteger value3() {
        return getAge();
    }

    @Override
    public LocalDateTime value4() {
        return getRegistrationDate();
    }

    @Override
    public StudentsRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public StudentsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StudentsRecord value3(UInteger value) {
        setAge(value);
        return this;
    }

    @Override
    public StudentsRecord value4(LocalDateTime value) {
        setRegistrationDate(value);
        return this;
    }

    @Override
    public StudentsRecord values(UInteger value1, String value2, UInteger value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentsRecord
     */
    public StudentsRecord() {
        super(Students.STUDENTS);
    }

    /**
     * Create a detached, initialised StudentsRecord
     */
    public StudentsRecord(UInteger id, String name, UInteger age, LocalDateTime registrationDate) {
        super(Students.STUDENTS);

        set(0, id);
        set(1, name);
        set(2, age);
        set(3, registrationDate);
    }
}
