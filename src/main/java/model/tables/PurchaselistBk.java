/*
 * This file is generated by jOOQ.
 */
package model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import model.Keys;
import model.Skillbox;
import model.tables.records.PurchaselistBkRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurchaselistBk extends TableImpl<PurchaselistBkRecord> {

    private static final long serialVersionUID = -263053011;

    /**
     * The reference instance of <code>skillbox.purchaselist_bk</code>
     */
    public static final PurchaselistBk PURCHASELIST_BK = new PurchaselistBk();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PurchaselistBkRecord> getRecordType() {
        return PurchaselistBkRecord.class;
    }

    /**
     * The column <code>skillbox.purchaselist_bk.ID</code>.
     */
    public final TableField<PurchaselistBkRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>skillbox.purchaselist_bk.student_name</code>.
     */
    public final TableField<PurchaselistBkRecord, String> STUDENT_NAME = createField(DSL.name("student_name"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>skillbox.purchaselist_bk.course_name</code>.
     */
    public final TableField<PurchaselistBkRecord, String> COURSE_NAME = createField(DSL.name("course_name"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>skillbox.purchaselist_bk.price</code>.
     */
    public final TableField<PurchaselistBkRecord, Integer> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>skillbox.purchaselist_bk.subscription_date</code>.
     */
    public final TableField<PurchaselistBkRecord, LocalDateTime> SUBSCRIPTION_DATE = createField(DSL.name("subscription_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>skillbox.purchaselist_bk</code> table reference
     */
    public PurchaselistBk() {
        this(DSL.name("purchaselist_bk"), null);
    }

    /**
     * Create an aliased <code>skillbox.purchaselist_bk</code> table reference
     */
    public PurchaselistBk(String alias) {
        this(DSL.name(alias), PURCHASELIST_BK);
    }

    /**
     * Create an aliased <code>skillbox.purchaselist_bk</code> table reference
     */
    public PurchaselistBk(Name alias) {
        this(alias, PURCHASELIST_BK);
    }

    private PurchaselistBk(Name alias, Table<PurchaselistBkRecord> aliased) {
        this(alias, aliased, null);
    }

    private PurchaselistBk(Name alias, Table<PurchaselistBkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PurchaselistBk(Table<O> child, ForeignKey<O, PurchaselistBkRecord> key) {
        super(child, key, PURCHASELIST_BK);
    }

    @Override
    public Schema getSchema() {
        return Skillbox.SKILLBOX;
    }

    @Override
    public Identity<PurchaselistBkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PURCHASELIST_BK;
    }

    @Override
    public UniqueKey<PurchaselistBkRecord> getPrimaryKey() {
        return Keys.KEY_PURCHASELIST_BK_PRIMARY;
    }

    @Override
    public List<UniqueKey<PurchaselistBkRecord>> getKeys() {
        return Arrays.<UniqueKey<PurchaselistBkRecord>>asList(Keys.KEY_PURCHASELIST_BK_PRIMARY);
    }

    @Override
    public PurchaselistBk as(String alias) {
        return new PurchaselistBk(DSL.name(alias), this);
    }

    @Override
    public PurchaselistBk as(Name alias) {
        return new PurchaselistBk(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PurchaselistBk rename(String name) {
        return new PurchaselistBk(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PurchaselistBk rename(Name name) {
        return new PurchaselistBk(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
