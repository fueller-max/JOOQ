/*
 * This file is generated by jOOQ.
 */
package model.tables;


import java.time.LocalDateTime;

import model.Skillbox;
import model.tables.records.PurchaselistRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Purchaselist extends TableImpl<PurchaselistRecord> {

    private static final long serialVersionUID = -2041151758;

    /**
     * The reference instance of <code>skillbox.purchaselist</code>
     */
    public static final Purchaselist PURCHASELIST = new Purchaselist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PurchaselistRecord> getRecordType() {
        return PurchaselistRecord.class;
    }

    /**
     * The column <code>skillbox.purchaselist.student_name</code>.
     */
    public final TableField<PurchaselistRecord, String> STUDENT_NAME = createField(DSL.name("student_name"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>skillbox.purchaselist.course_name</code>.
     */
    public final TableField<PurchaselistRecord, String> COURSE_NAME = createField(DSL.name("course_name"), org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>skillbox.purchaselist.price</code>.
     */
    public final TableField<PurchaselistRecord, Integer> PRICE = createField(DSL.name("price"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>skillbox.purchaselist.subscription_date</code>.
     */
    public final TableField<PurchaselistRecord, LocalDateTime> SUBSCRIPTION_DATE = createField(DSL.name("subscription_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>skillbox.purchaselist</code> table reference
     */
    public Purchaselist() {
        this(DSL.name("purchaselist"), null);
    }

    /**
     * Create an aliased <code>skillbox.purchaselist</code> table reference
     */
    public Purchaselist(String alias) {
        this(DSL.name(alias), PURCHASELIST);
    }

    /**
     * Create an aliased <code>skillbox.purchaselist</code> table reference
     */
    public Purchaselist(Name alias) {
        this(alias, PURCHASELIST);
    }

    private Purchaselist(Name alias, Table<PurchaselistRecord> aliased) {
        this(alias, aliased, null);
    }

    private Purchaselist(Name alias, Table<PurchaselistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Purchaselist(Table<O> child, ForeignKey<O, PurchaselistRecord> key) {
        super(child, key, PURCHASELIST);
    }

    @Override
    public Schema getSchema() {
        return Skillbox.SKILLBOX;
    }

    @Override
    public Purchaselist as(String alias) {
        return new Purchaselist(DSL.name(alias), this);
    }

    @Override
    public Purchaselist as(Name alias) {
        return new Purchaselist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Purchaselist rename(String name) {
        return new Purchaselist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Purchaselist rename(Name name) {
        return new Purchaselist(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, Integer, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
